@{
    ViewBag.Title = "Home Page";
}
<div>
    <div id="players"></div>
    <div id="aliveplayers"></div>
    <p id="gameInProgress"></p>
    <div id="game">
        <div id="outcomes"></div>
        <div id="actions"></div>
    </div>
</div>
@section scripts {
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!-- Add IWC SignalR patch https://github.com/slimjack/IWC-SignalR -->
    <script src="~/Scripts/iwc-all.min.js"></script>
    <script src="~/Scripts/signalr-patch.js"></script>
    <script src="~/Scripts/iwc-signalr.js"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        var players = [];
        var alivePlayers = [];
        var gameInProgress = [];
        $(function () {
            // Declare a proxy to reference the hub.
            var game = SJ.iwc.SignalR.getHubProxy('game', {
                client: {
                    addPlayer: function (name) {
                        $("#playersHeader").text("Players:");
                        var encodedName = $('<div />').text(name).html();
                        $('#players').append("<span id='player-" + name + "'>- " + encodedName + '</span>');
                        players.push(name);
                    },
                    removePlayer: function(name) {
                        $("#player-" + name).remove();
                        var index = players.indexOf(name);
                        players.splice(index, 1);
                    },
                    gameStart: function () {

                    },
                    turnStart: function (state) {

                        },
                        getOutcomes: function (outcomes) {
                            console.log(outcomes);
                        },
                        gameEnd: function (winners) {

                    }                        
                }

            });
            // Set initial focus to message input box.
            $('#message').focus();

            var setupPage = function () {
                game.server.getCurrentLobbyState().done(function (state) {
                    players = state["names"];
                    alivePlayers = state["aliveNames"];
                    gameInProgress = state["gameInProgress"];
                    $('#players').append("<span id='playersHeader'>Players:" + (players.length === 0 ? " None" : "") + "</span>");
                    for (var i = 0; i < players.length; i++) {
                        var encodedName = $('<div />').text(players[i]).html();
                        $('#players').append("<span id='player-" + players[i] + "'>- " + encodedName + '</span>');
                    }
                    $('#aliveplayers').append("<span id='AlivelayersHeader'>Alive Players:" + (alivePlayers.length === 0 ? " None" : "") + "</span>");
                    for (var j = 0; j < alivePlayers.length; j++) {
                        var encodedAliveName = $('<div />').text(alivePlayers[j]).html();
                        $('#aliveplayers').append("<span id='aliveplayer-" + alivePlayers[j] + "'>- " + encodedAliveName + '</span>');
                    }
                    $('#gameInProgress').text("Progress Status: " + (gameInProgress ? "Game In Progress" : "Game Not In Progress"));
                });
            }
            // Start the connection.
            SJ.iwc.SignalR.start().done(function () {
                console.log("Connection to Server Successful");
                var handleNameReturn = function (success) {
                    if (success) {
                        setupPage();
                    } else {
                        game.server.newName(prompt("That name is taken. Please enter a different one."))
                            .done(handleNameReturn);
                    }
                };
                game.server.getName()
                    .done(function (name) {
                        if (name == undefined) {
                            game.server.newName(prompt("Enter your name")).done(handleNameReturn);
                        } else {
                            setupPage();
                        }
                    });
            });
        });
    </script>
}