@{
    ViewBag.Title = "Home Page";
}
<div>
    <span >Lobby: </span>
    <div id="lobby"></div>
    <div id="gamesetup">
        <input type="button" id="startGame" value="Start Game!" />
    </div>
    <div id="game" hidden>
        <span id="playersLabel">Players: </span>
        <div id="players"></div>
        <span id="outcomesLabel">Outcomes: </span>
        <div id="outcomes"></div>
        <span id="actionsLabel">Actions: </span>
        <div id="actions"></div>
    </div>
</div>
@section scripts {
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!-- Add IWC SignalR patch https://github.com/slimjack/IWC-SignalR -->
    <script src="~/Scripts/iwc-all.min.js"></script>
    <script src="~/Scripts/signalr-patch.js"></script>
    <script src="~/Scripts/iwc-signalr.js"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        var name = "";
        var players = [];
        var users = [];
        var game;
        var outcomeToString = function(outcome) {
            var command = outcome["ActCommand"];
            if (command["ActType"] === 0) {
                var outcomeStr = command["Actor"]["PlayerUser"]["Name"] +
                    " shot " +
                    command["Target"]["PlayerUser"]["Name"];
                if (outcome["TargetDucked"]) {
                    return outcomeStr + " but they ducked.";
                } else {
                    return outcomeStr;
                }
            } else {
                return command["Actor"]["PlayerUser"]["Name"] + " ducked (but wasn't shot at).";
            }
        };
        var populateGame = function () {
            $('#players').empty();
            $('#actions').empty();
            var isAlive = true;
            var player;
            for (var i = 0; i < players.length; i++) {
                player = players[i];
                if (player["PlayerUser"]["Name"] === name && !player["IsAlive"]) {
                    isAlive = false;
                    $("#actionsLabel").hide();
                }
            }
            if (isAlive) {
                $("#actionsLabel").show();
                $('#actions').append("<input type='button' id='duck' value='DUCK'/>");
                $("#duck").click(function () { game.server.sendAction("DUCK"); });
            }
            for (var j = 0; j < players.length; j++) {
                player = players[j];
                if (player["IsAlive"]) {
                    var user = player["PlayerUser"];
                    var userName = user["Name"];
                    var encodedName = $('<div />').text(userName).html();
                    $('#players').append("<span id='player-" + userName + "'>- " + encodedName + '</span>');
                    if (isAlive) {
                        $('#actions').append("<br/><input type='button' id='shoot-" + userName + "' value='SHOOT " + encodedName + "'/>");
                        $("#shoot-" + userName).click({ userName: userName }, function (e) {
                            game.server.sendAction("SHOOT " + e.data.userName);
                        });
                    }
                }
            }
        }
        $(function () {
            // Declare a proxy to reference the hub.
            game = SJ.iwc.SignalR.getHubProxy('game', {
                client: {
                    addUser: function (user) {
                        if (name === "") {
                            return;
                        }
                        var userName = user["Name"];
                        var encodedName = $('<div />').text(userName).html();
                        $('#lobby').append("<span id='user-" + userName + "'>- " + encodedName + '</span>');
                        users.push(user);
                    },
                    removeUser: function (user) {
                        if (name === "") {
                            return;
                        }
                        var userName = user["Name"];
                        $("#user-" + userName).remove();
                        var index = -1;
                        for (var i = 0; i < users.length; i++) {
                            if (users[i]["Name"] === userName) {
                                index = i;
                            }
                        }
                        if (index !== -1) {
                            users.splice(index, 1);
                        }
                    },
                    gameStart: function (playerList) {
                        if (name === "") {
                            return;
                        }
                        $("#game").show();
                        $("#gamesetup").hide();
                        $("#outcomes").hide();
                        players = playerList;
                        populateGame();
                    },
                    turnStart: function (state) {
                        if (name === "") {
                            return;
                        }
                        players = state["players"];
                        populateGame();
                    },
                    getOutcomes: function (outcomes) {
                        if (name === "") {
                            return;
                        }
                        $("#outcomes").empty();
                        $("#outcomes").show();
                        for (var i = 0; i < outcomes.length; i++) {
                            var outcome = outcomes[i];
                            $('#outcomes').append("<span>- " + outcomeToString(outcome) + "</span>");
                        }
                        game.server.sendReady();
                    },
                    gameEnd: function () {
                        if (name === "") {
                            return;
                        }
                        $("#actions").empty();
                        $("#actionsLabel").hide();
                        $("#gamesetup").show();
                    }                        
                }

            });
            // Set initial focus to message input box.
            $('#message').focus();

            var setupPage = function () {
                game.server.getCurrentLobbyState().done(function (state) {
                    users = state["users"];
                    players = state["players"];
                    var gameInProgress = state["gameInProgress"];
                    for (var i = 0; i < users.length; i++) {
                        var userName = users[i]["Name"];
                        var encodedName = $('<div />').text(userName).html();
                        $('#lobby').append("<span id='user-" + userName + "'>- " + encodedName + '</span>');
                    }
                    if (gameInProgress) {
                        game.client.gameStart(state);
                    }
                });
                $("#startGame").click(function() {
                    game.server.startGame();
                });
            }
            // Start the connection.
            SJ.iwc.SignalR.start().done(function () {
                console.log("Connection to Server Successful");
                var handleNameReturn = function (success) {
                    if (success) {
                        setupPage();
                    } else {
                        name = prompt("That name is taken. Please enter a different one.");
                        game.server.newName(name).done(handleNameReturn);
                    }
                };
                game.server.getName()
                    .done(function (servername) {
                        if (servername == undefined) {
                            name = prompt("Enter your name");
                            game.server.newName(name).done(handleNameReturn);
                        } else {
                            name = servername;
                            setupPage();
                        }
                    });
            });
        });
    </script>
}